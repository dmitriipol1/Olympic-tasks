package PriorityQueue;

import java.util.*;

public class PQ {
    public static final int SIZE = 3_000_000;
    static List<String> list = new ArrayList<>();

    public static void main(String[] args) {
        Random random = new Random();
        for (int i = 0; i < SIZE; i++) {
            list.add("hello-" + String.valueOf(random.nextInt(1000)));
        }

        System.out.println("PQ find");
        long start = System.currentTimeMillis();
        List<String> result = leastN(list, 3);
        System.out.println(System.currentTimeMillis() - start);
        for (String num : result) {
            System.out.println(num);
        }

        System.out.println("Collections sort");
        start = System.currentTimeMillis();
        Collections.sort(list);
        System.out.println(System.currentTimeMillis() - start);
        for (String num : list.subList(0,3)){
            System.out.println(num);
        }

    }


    public static List leastN(List<String> input, int n) {
        assert n > 0;
        PriorityQueue<String> pq = new PriorityQueue<>(n, Collections.reverseOrder());
        for (String t : input) {
            if (pq.size() < n) {
                pq.add(t);
            } else if (pq.peek().compareTo(t) > 0) {
                pq.poll();
                pq.add(t);
            }
        }
        ArrayList<String> list = new ArrayList<>(pq);
        Collections.sort(list);
        return list;
    }

}
